id: gcp_scheduled
namespace: rides
description: |
  Best to add a label `backfill:true` from the UI to track executions created via a backfill.
  CSV data used here comes from: https://raw.githubusercontent.com/ccalobeto/metropolitano/main/datasets/

inputs:
  - id: metropolitano
    type: SELECT
    displayName: Select metropolitano type
    values: [alimentadores, troncales]
    defaults: alimentadores

variables:
  file: "{{inputs.metropolitano}}_tripdata_{{trigger.date | date('yyyy-MM')}}.csv"
  gcs_file: "gs://{{kv('GCP_BUCKET_NAME')}}/{{inputs.metropolitano}}/{{vars.file}}"
  table: "{{kv('GCP_DATASET')}}.{{inputs.metropolitano}}_tripdata_{{trigger.date | date('yyyy_MM')}}"
  data: "{{outputs.extract.outputFiles[inputs.metropolitano ~ '_tripdata_' ~ (trigger.date | date('yyyy-MM')) ~ '.csv']}}"

tasks:
  - id: set_label
    type: io.kestra.plugin.core.execution.Labels
    labels:
      file: "{{render(vars.file)}}"
      metropolitano: "{{inputs.metropolitano}}"

  - id: extract
    type: io.kestra.plugin.scripts.shell.Commands
    outputFiles:
      - "*.csv"
    taskRunner:
      type: io.kestra.plugin.core.runner.Process
    commands:
      - wget -qO- https://raw.githubusercontent.com/ccalobeto/metropolitano/main/datasets/{{inputs.metropolitano}}/{{render(vars.file)}}.gz | gunzip > {{render(vars.file)}}

  - id: upload_to_gcs
    type: io.kestra.plugin.gcp.gcs.Upload
    from: "{{render(vars.data)}}"
    to: "{{render(vars.gcs_file)}}"

  - id: if_alimentadores_metropolitano
    type: io.kestra.plugin.core.flow.If
    condition: "{{inputs.metropolitano == 'alimentadores'}}"
    then:
      - id: bq_alimentadores_tripdata
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          CREATE TABLE IF NOT EXISTS `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.alimentadores_tripdata` (
            unique_row_id BYTES OPTIONS (
                description = 'A unique identifier for the row, generated by hashing key attributes.'
            ),
            filename STRING OPTIONS (
                description = 'The source filename from which the record was loaded.'
            ),
            operador_id INT64 OPTIONS (
                description = 'Numeric operator id from CSV (e.g. 14, 13).'
            ),
            operador STRING OPTIONS (
                description = 'Operator name from CSV (e.g. "Peru Masivo").'
            ),
            ubicacion INT64 OPTIONS (description = 'Numeric location code from CSV.'),
            fecha_hora TIMESTAMP OPTIONS (
                description = 'Record timestamp parsed from CSV (YYYY-MM-DD HH:MM:SS).'
            ),
            nombre_titulo STRING OPTIONS (
                description = 'Title/name field from CSV (e.g. "Tarjeta con valor anonymo").'
            ),
            ruta STRING OPTIONS (
                description = 'Route name from CSV (may contain trailing spaces).'
            ),
            paradero STRING OPTIONS (description = 'Stop or station name from CSV.'),
            monto NUMERIC OPTIONS (
                description = 'Fare amount in local currency from CSV.'
            ),
            loaded_date DATE OPTIONS (
                description = 'The date when the record was loaded into BigQuery.'
            )
          ) PARTITION BY DATE(fecha_hora);

      - id: bq_alimentadores_tripdata_ext
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          CREATE
          OR REPLACE EXTERNAL TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext` (
            operador_id INT64 OPTIONS (
                description = 'Numeric operator id taken from the first CSV column (e.g. 14, 13)'
            ),
            operador STRING OPTIONS (
                description = 'Operator name, e.g. "Peru Masivo", "Transvial"'
            ),
            ubicacion INT64 OPTIONS (
                description = 'Numeric location code from CSV (third column)'
            ),
            fecha_hora TIMESTAMP OPTIONS (
                description = 'Datetime of the record parsed from CSV (format: YYYY-MM-DD HH:MM:SS)'
            ),
            nombre_titulo STRING OPTIONS (
                description = 'Title/name field shown in CSV (e.g. "Tarjeta con valor anonymo", "TV Estudiante")'
            ),
            ruta STRING OPTIONS (
                description = 'Route name or label from CSV (may be padded with spaces)'
            ),
            paradero STRING OPTIONS (
                description = 'Stop or station name (may contain special characters)'
            ),
            monto NUMERIC OPTIONS (
                description = 'Fare amount in local currency, decimal value'
            )
          ) OPTIONS (
              format = 'CSV',
              uris = ['{{render(vars.gcs_file)}}'],
              skip_leading_rows = 1,
              ignore_unknown_values = TRUE
          );

      - id: bq_alimentadores_table_tmp
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          CREATE
          OR REPLACE TABLE `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}` AS
          SELECT
            MD5(
              CONCAT(
                COALESCE(CAST(operador_id AS STRING), ""),
                COALESCE(CAST(fecha_hora AS STRING), ""),
                COALESCE(CAST(ubicacion AS STRING), ""),
                COALESCE(CAST(ruta AS STRING), ""),
                COALESCE(CAST(paradero AS STRING), "")
              )
            ) AS unique_row_id,
            "{{render(vars.file)}}" AS filename,
            *,
            DATE(CURRENT_TIMESTAMP()) AS loaded_date
          FROM
            `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`;

      - id: bq_alimentadores_merge
        type: io.kestra.plugin.gcp.bigquery.Query
        sql: |
          MERGE INTO `{{kv('GCP_PROJECT_ID')}}.{{kv('GCP_DATASET')}}.alimentadores_tripdata` T USING `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}` S ON T.unique_row_id = S.unique_row_id
          WHEN NOT MATCHED THEN
          INSERT
            (
              unique_row_id,
              filename,
              operador_id,
              operador,
              ubicacion,
              fecha_hora,
              nombre_titulo,
              ruta,
              paradero,
              monto, 
              loaded_date
            )
          VALUES
            (
              S.unique_row_id,
              S.filename,
              S.operador_id,
              S.operador,
              S.ubicacion,
              S.fecha_hora,
              S.nombre_titulo,
              S.ruta,
              S.paradero,
              S.monto,
              S.loaded_date
            );

  # - id: if_troncales_metropolitano
  #   type: io.kestra.plugin.core.flow.If
  #   condition: "{{inputs.metropolitano == 'troncales'}}"
  #   then:
  #     - id: bq_troncales_tripdata
  #       type: io.kestra.plugin.gcp.bigquery.Query
  #       sql: |
          
  #     - id: bq_troncales_table_ext
  #       type: io.kestra.plugin.gcp.bigquery.Query
  #       sql: |
          
  #     - id: bq_troncales_table_tmp
  #       type: io.kestra.plugin.gcp.bigquery.Query
  #       sql: |

  #     - id: bq_troncales_merge
  #       type: io.kestra.plugin.gcp.bigquery.Query
  #       sql: |
          
  - id: bq_drop_tmp
    type: io.kestra.plugin.gcp.bigquery.Query
    sql: |
      DROP TABLE IF EXISTS `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}_ext`;
      DROP TABLE IF EXISTS `{{kv('GCP_PROJECT_ID')}}.{{render(vars.table)}}`;

  - id: purge_files
    type: io.kestra.plugin.core.storage.PurgeCurrentExecutionFiles
    description: To avoid cluttering your storage, we will remove the downloaded files

pluginDefaults:
  - type: io.kestra.plugin.gcp
    values:
      serviceAccount: "{{kv('GOOGLE_CREDENTIALS_ID')}}"
      projectId: "{{kv('GCP_PROJECT_ID')}}"
      location: "{{kv('GCP_LOCATION')}}"
      bucket: "{{kv('GCP_BUCKET_NAME')}}"

triggers:
  - id: alimentadores_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 9 1 * *"
    inputs:
      metropolitano: alimentadores

  - id: troncales_schedule
    type: io.kestra.plugin.core.trigger.Schedule
    cron: "0 10 1 * *"
    inputs:
      metropolitano: troncales
